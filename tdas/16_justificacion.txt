----------------------------Planteo inicial----------------------------

Se desea combinar dos pilas de enteros en una sola sin duplicados, usando únicamente
operaciones básicas de pila (Apilar y Desapilar). Se busca analizar la complejidad
del algoritmo MergePilasSinDuplicados.

----------------------------Análisis de complejidad----------------------------

1. Operaciones de tiempo constante O(1):
   - Creación de pilas auxiliares: aux1, aux2 y resultado.
   - Comparaciones simples para verificar duplicados en la pila resultado.
   - Asignaciones y operaciones básicas dentro de los condicionales.

2. Operaciones que dependen de n = tamaño total de ambas pilas:
   - Pasar todos los elementos de pila1 a aux1 y de pila2 a aux2:
     - Cada elemento se desapila y se apila una vez → O(n1 + n2)
   - Bucle principal de merge:
     - Cada elemento se procesa un número constante de veces (desapilar, comparar, apilar).
     - Total de operaciones lineales → O(n1 + n2)
   - Vaciar la pila resultado en aux1 al final:
     - Cada elemento se mueve exactamente una vez → O(n1 + n2)

3. Sumatoria total:
   - T(n) = O(1) + O(n1 + n2) + O(n1 + n2) + O(n1 + n2) = O(n1 + n2) = O(n)
   - No hay bucles anidados que recorran toda la pila más de una vez.

----------------------------Respuesta----------------------------

El algoritmo MergePilasSinDuplicados tiene complejidad lineal O(n),
donde n es la suma de los tamaños de las pilas de entrada.  
Esto se debe a que:
- Las operaciones constantes no dependen del tamaño de las pilas.
- Cada elemento de entrada se procesa un número constante de veces,  
  asegurando un tiempo total que crece linealmente con n.
